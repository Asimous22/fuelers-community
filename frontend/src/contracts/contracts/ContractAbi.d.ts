/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.90.0
  Forc version: 0.60.0
  Fuel-Core version: 0.30.0
*/

import type {
  BigNumberish,
  BN,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Enum, Vec } from "./common";

export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;
export type InvalidErrorInput = Enum<{ OnlyOwner: IdentityInput, AlreadyVoted: IdentityInput }>;
export type InvalidErrorOutput = Enum<{ OnlyOwner: IdentityOutput, AlreadyVoted: IdentityOutput }>;

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;

interface ContractAbiInterface extends Interface {
  functions: {
    initialize_categories: FunctionFragment;
    initialize_owner: FunctionFragment;
    read_activist: FunctionFragment;
    read_contribution: FunctionFragment;
    read_contributor: FunctionFragment;
    submit_vote: FunctionFragment;
  };
}

export class ContractAbi extends Contract {
  interface: ContractAbiInterface;
  functions: {
    initialize_categories: InvokeFunction<[], void>;
    initialize_owner: InvokeFunction<[], IdentityOutput>;
    read_activist: InvokeFunction<[], Vec<number>>;
    read_contribution: InvokeFunction<[], Vec<number>>;
    read_contributor: InvokeFunction<[], Vec<number>>;
    submit_vote: InvokeFunction<[category: BigNumberish, user_vote: BigNumberish], void>;
  };
}
